# $Id$

## AUTO DETECTION OF PLATFORM AND ARCHITECTURE
VISTA_OSTYPE ?= $(shell uname | tr '[:lower:]' '[:upper:]')
VISTA_HWARCH ?= $(shell uname -m | tr '[:lower:]' '[:upper:]')

## PLATFORM SPECIFIC SETTINGS
include Makefile.$(VISTA_OSTYPE)

#======================
#== PROJECT SPECIFIC ==
#======================

## APPLICATION'S NAME
APPNAME=VistaKernelOpenSGExt

## APPLICATION TYPE
# possible values are 
# LIB: library 
# SO:  shared object
# BIN: binary/executable
# determines the naming scheme of the produced output file
# example: APPNAME=VistaKernel 
# LIB: libVistaKernel[D].a
# SO:  libVistaKernel[D].so
# BIN:    VistaKernel[D]
TYPE ?= SO

## DISTRIBUTION DIRECTORY
# the directory where the final libs/headers are copied to
DISTDIR=../../dist/$(SYSTEM).$(VISTA_HWARCH)

## BUILT DIRECTORY
# the directory (tree) where the temporary .o files are placed during the build
BUILTDIR=./built

## OUTPUT DIRECTORIES
# the list of directories which are to be created before the build
SUBDIRS =   ${BUILTDIR}

## SOURCE DIRECTORY LIST
# add your directories containing source-files here
SRCDIRS = ..


## LINK LIBRARIES
# add the libs, library and include directories for those libs which are
# shared on all platforms. platform-specific stuff goes to ADD* in
# Makefile.$(VISTA_OSTYPE)

LIBS_DEBUG      = -lVistaBaseD -lVistaKernelD -lVistaMathD -lOSGBase -lOSGSystem -lGL
LIBS_RELEASE    = -lVistaBase -lVistaKernel  -lVistaMath  -lOSGBase -lOSGSystem -lGL

OPENSG_ROOT ?= /usr
LIBDIRS_DEBUG   = -L$(DISTDIR)/lib -L$(OPENSG_ROOT)/lib/dbg
LIBDIRS_RELEASE = -L$(DISTDIR)/lib -L$(OPENSG_ROOT)/lib/opt

OPENSG_ROOT ?= /usr
INCLUDES_DEBUG   = -I.. -I$(DISTDIR)/include -I$(OPENSG_ROOT)/include -I$(GLUT_ROOT)/include
INCLUDES_RELEASE = -I.. -I$(DISTDIR)/include -I$(OPENSG_ROOT)/include -I$(GLUT_ROOT)/include


## BUILD SYSTEM INCLUDES
# include mandatory Makefiles:
# Makefile.COMMON (for path/name construction)
# Makefile.build  (for build rules)

include ../../VistaBuild/Makefile.COMMON
include ../../VistaBuild/Makefile.build
